#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

int T;
int N, M,K;
int result = 0;

int arr[101][101];


int sol() {

	vector<int> v;
	for (int i = 0; i < N; i++) {
		if (i < N / 2) {
			v.push_back(1);
		}
		else {
			v.push_back(0);
		}
	}
	sort(v.begin(), v.end());

	int result = 10000000;
	do {
	//	cout << "start " << endl;

		int t1 = 0;
		for (int i = 0; i < N-1; i++) {
			for (int j = i+1; j < N; j++) {
				if (v[i] == 1 && v[j] == 1) {
				//	cout << i << " / " << j << endl;
					t1 += arr[i][j] + arr[j][i];
				}
			}
		}
		int t2 = 0;
		for (int i = 0; i < N - 1; i++) {
			for (int j = i + 1; j < N; j++) {
				if (v[i] == 0 && v[j] == 0) {
				//	cout << i << " / " << j << endl;
					t2 += arr[i][j] + arr[j][i];
				}
			}
		}
		result = min(result, abs(t1 - t2));
	
	} while (next_permutation(v.begin(), v.end()));
	
	return result;

}



int main() {
	int M;
	scanf(" %d", &T);
	
	
	for (int ii = 1; ii <= T; ii++) {
		scanf(" %d", &N);
		
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				scanf(" %d", &arr[i][j]);
			}
		}

		int result = sol();

		printf("#%d %d\n", ii,result);

	}
	return 0;
}
